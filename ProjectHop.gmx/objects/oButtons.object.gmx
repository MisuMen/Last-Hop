<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buttons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Definitions///
screen_width = 1920;
screen_height = 1080;
numa=0
rot=0
mot1=0
rot_l=0
trans=1
ACTIVE=1
INVENTORY=0
LIFE_CHECK=0;
  fade=0
  INV_X=1800//&lt;--
  INV_Y=0
col = c_green
image_speed=0
xx=view_xview[0]
yy=view_yview[0]
lives = 5
draw_set_font(font0)
draw_set_alpha_test(true)
global.DUCK = 0
global.METER = 0
global.APPER = 0
global.MOB = instance_number(oBad1);
global.MOB_KILL=0
scr_set_time(0,2)
RADIALBLUR = shader_get_uniform(shd_radialblur,'pos')
device_mouse_dbclick_enable(false);
/////////IMAGE INDEXES//////////////
globalvar Slot_img, view_index;
Slot_img[12]=1;

global.PROMPT=0
Menu_Page = 0; //1 = Options; 2 = Notes adn Scratches

view_index = 0
date_display = 0
////date prompt message
  temp_phase=0
  slide_down=0
  temp_timer=0
  duration=0
scr_Statistic_Ini()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///leaf animation var

leaf_f1=0
leaf_r1=0
leaf_f2=0
leaf_r2=0
leaf_f3=0
leaf_r3=0
leaf_f4=0
leaf_r4=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*//SAVE ALL DATA IN HERE [INI]
if lives==0
{
////Game Over
game_restart()
}
else
{
room_goto(Map1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transitions
xx = view_xview[view_index];
yy = view_yview[view_index];
x = xx
y = yy
//scr_update_time()
if ACTIVE==1
{trans-=0.025; if trans&lt;=0 {ACTIVE=0; trans=0}}
if ACTIVE==2 
{trans+=0.025; if trans&gt;=1 {ACTIVE=0; event_perform(ev_other,ev_user0)}}
if global.METER &gt;99 col=c_teal else col=c_green

var rot_m = 0.5;//2-(point_distance(rot*2,0,0,0)/45);
if (rot_l)&amp;&amp;(rot&lt;45) rot+=rot_m
if (rot_l==0)&amp;&amp;(rot&gt;-45) rot-=rot_m
if (rot_l)&amp;&amp;(rot&gt;=45) rot_l=0
if (rot_l==0)&amp;&amp;(rot&lt;=-45) rot_l=1

global.HP += (keyboard_check(vk_pageup)-keyboard_check(vk_pagedown))*1;

/////Leaf animation
if (global.HP&lt;=0)
{
 if (LIFE_CHECK==1)
 {
  if (leaf_r1&lt;135) leaf_r1 +=5; else leaf_f1+=5
 }
 if (LIFE_CHECK==2)
 {
  if (leaf_r2&gt;-135) leaf_r2 -=5; else leaf_f2+=5
 }
 if (LIFE_CHECK==3)
 {
  if (leaf_r3&lt;45) leaf_r3 +=5; else leaf_f3+=5
 }
 if (LIFE_CHECK&gt;3)
 {
  if (leaf_r4&gt;-45) leaf_r4 -=5; else leaf_f4+=5
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory system
if (INVENTORY)
{
 if INV_X&gt;0
 {
  INV_X-=30;
  INV_Y+=15;
 }
 if (INV_X&lt;=0)&amp;&amp;(fade&lt;1)
 {
  fade+=0.02;
 }
 if (fade&gt;=1)&amp;&amp;(mouse_check_button_pressed(mb_left))
 {
  ////////////Page selection///////////
if (mouse_y &gt; yy+130)&amp;&amp;(mouse_y &lt; yy+250)
{  
  if (mouse_x &gt; xx+600)&amp;&amp;(mouse_x &lt; xx+720)
  {
   Menu_Page-=1///Previous arrow
  }
  if (mouse_x &gt; xx+1180)&amp;&amp;(mouse_x &lt; xx+1300)
  {
   Menu_Page+=1//Next arrow
  }
}
  //Menu_Page = Menu_Page mod 3;
  if (Menu_Page &lt; 0){Menu_Page=2}
  if (Menu_Page &gt; 2){Menu_Page=0}
  ///////////Slot selection////////////
if (Menu_Page==0)
{
  var ii = 0;
  if (mouse_y&gt;yy+240)&amp;&amp;(mouse_y&lt;yy+440)
  {
   if (mouse_x&lt;xx+750)&amp;&amp;(mouse_x&gt;xx+550)///slot 1
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[0]=1
    exit;
   }
   if (mouse_x&lt;xx+960)&amp;&amp;(mouse_x&gt;xx+760)///slot 2
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[1]=1
    exit;
   }
   if (mouse_x&lt;xx+1170)&amp;&amp;(mouse_x&gt;xx+970)///slot 3
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[2]=1
    exit;
   }
   if (mouse_x&lt;xx+1380)&amp;&amp;(mouse_x&gt;xx+1180)///slot 4
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[3]=1
    exit;
   }
  }
  if (mouse_y&gt;yy+450)&amp;&amp;(mouse_y&lt;yy+650)
  {
   if (mouse_x&lt;xx+750)&amp;&amp;(mouse_x&gt;xx+550)///slot 5
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[4]=1
    exit;
   }
   if (mouse_x&lt;xx+960)&amp;&amp;(mouse_x&gt;xx+760)///slot 6
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[5]=1
    exit;
   }
   if (mouse_x&lt;xx+1170)&amp;&amp;(mouse_x&gt;xx+970)///slot 7
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[6]=1
    exit;
   }
   if (mouse_x&lt;xx+1380)&amp;&amp;(mouse_x&gt;xx+1180)///slot 8
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[7]=1
    exit;
   }
  }
  if (mouse_y&gt;yy+660)&amp;&amp;(mouse_y&lt;yy+860)
  {
   if (mouse_x&lt;xx+750)&amp;&amp;(mouse_x&gt;xx+550)///slot 9
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[8]=1
    exit;
   }
   if (mouse_x&lt;xx+960)&amp;&amp;(mouse_x&gt;xx+760)///slot 10
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[9]=1
    exit;
   }
   if (mouse_x&lt;xx+1170)&amp;&amp;(mouse_x&gt;xx+970)///slot 11
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[10]=1
    exit;
   }
   if (mouse_x&lt;xx+1380)&amp;&amp;(mouse_x&gt;xx+1180)///slot 12
   {
    repeat(12){Slot_img[ii]=0;ii+=1}
    Slot_img[11]=1
    exit;
   }
  }
 }
 if (Menu_Page==1)&amp;&amp;(global.PROMPT==0)
 {
  if (mouse_x &gt; xx+600)&amp;&amp;(mouse_x &lt; xx+1400)
  {
   if (mouse_y &gt; yy+220)&amp;&amp;(mouse_y &lt; yy+310)
   {
    //Settings
   }
   if (mouse_y &gt; yy+320)&amp;&amp;(mouse_y &lt; yy+410)
   {
    //Online
    global.PROMPT=2
   }
   if (mouse_y &gt; yy+420)&amp;&amp;(mouse_y &lt; yy+510)
   {
    //Shop
   }
   if (mouse_y &gt; yy+520)&amp;&amp;(mouse_y &lt; yy+610)
   {
    global.PROMPT=3//Fun, hehe
   }
   if (mouse_y &gt; yy+620)&amp;&amp;(mouse_y &lt; yy+710)
   {
    //Exit Level
    room_goto(Map1)
   }
  }
 }
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control System
xx = view_xview[view_index];
yy = view_yview[view_index];
with(oPlyer)
{
 jk = 0;
 move_left=0;
 move_right=0;
}
with(oHercules)
{
 jk = 0;
 move_left=0;
 move_right=0;
}
global.DUCK=0
if instance_number(oPlyer)
{
if oPlyer.stall==0
{
if os_type = os_windows
{
            //////////////LEFT AND RIGHT BUTTONS/////////////////
            if keyboard_check_direct(vk_right)
            {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user0)}else{with(oPlyer)event_perform(ev_other,ev_user0)}}//right
            if keyboard_check_direct(vk_left) {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user1)}else{with(oPlyer)event_perform(ev_other,ev_user1)}}//left
            ///////////JUMP,DUCK, AND POWER BUTTONS//////////////
             if keyboard_check_pressed(vk_down)
             {global.DUCK=1; if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user2)}else{if (oPlyer.pressed==0){with(oPlyer)event_perform(ev_other,ev_user2)}}}//duck
             if keyboard_check_pressed(vk_up)
             {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user3)}else{with(oPlyer)event_perform(ev_other,ev_user3)}}//jump
             if keyboard_check_pressed(vk_enter){if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user4)}else{with(oPlyer)event_perform(ev_other,ev_user4)}}//power
            //////////////////MENU BUTTON////////////////////////
}
if (INVENTORY==0)
{
 duration++/////////////////////////////////////////////////////////&lt;-------------TIME HOW LONG YOU STAYED IN THE STAGE
}
for(var i = 0; i &lt;= 1; i++)
        {
        if instance_number(oPlyer)&gt;0
        {
         if device_mouse_check_button(i,mb_left)
            {
            var mouse_xx = device_mouse_x(i),
            var mouse_yy = device_mouse_y(i);
            if (INVENTORY==0)
            {
            //////////////LEFT AND RIGHT BUTTONS/////////////////
            if point_distance(xx,yy+screen_height,mouse_xx,mouse_yy)&lt;480
            {
             if point_direction(xx,yy+screen_height,mouse_xx,mouse_yy)&lt;45 
             {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user0)}else{with(oPlyer)event_perform(ev_other,ev_user0)}}//right
             else {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user1)}else{with(oPlyer)event_perform(ev_other,ev_user1)}}//left
            }
            //////////////////POWER BUTTON////////////////////////
            if mouse_xx &gt; xx+800 &amp;&amp; mouse_xx &lt; xx+1120
            {
             if mouse_yy &gt; yy+0 &amp;&amp; mouse_yy &lt; yy+200
             {
              if instance_number(oHercules)&gt;0 &amp;&amp; global.METER==100 &amp;&amp; slide_down==0{with(oHercules)event_perform(ev_other,ev_user4)}else{with(oPlyer)event_perform(ev_other,ev_user4)}//power
             }
            }
            //////////////////Inventory/////////////////////////
            }
            }
         if device_mouse_check_button_pressed(i,mb_left)
         {
            if (point_distance(xx+1810,yy+120,mouse_xx,mouse_yy)&lt;100)&amp;&amp;(fade==0)&amp;&amp;(INVENTORY==0)
            {
             INVENTORY=1
            }
             if (point_distance(xx+1810,yy+120,mouse_xx,mouse_yy)&lt;100)&amp;&amp;(fade&gt;=1)&amp;&amp;(INVENTORY)
             {
                INVENTORY=0
                fade=0
                INV_X=1850
                INV_Y=0
             }
         }
        
         if device_mouse_check_button_pressed(i,mb_left) &amp;&amp; (oPlyer.hover==0)
         {
             ///////////JUMP,DUCK //////////////
            var dist = point_distance(xx+screen_width,yy+screen_height,mouse_xx,mouse_yy);
            if dist &lt; 480 &amp;&amp; dist &gt; 0
            {
             if point_direction(xx+screen_width,yy+screen_height,mouse_xx,mouse_yy)&gt;=135 
             {global.DUCK=1; if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user2)}else{if (oPlyer.pressed==0){with(oPlyer)event_perform(ev_other,ev_user2)}}}//duck
             if point_direction(xx+screen_width,yy+screen_height,mouse_xx,mouse_yy)&lt;135 
             {if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user3)}else{with(oPlyer)event_perform(ev_other,ev_user3)}}//jump
            }
         }
         /*if device_mouse_check_button(i,mb_left) &amp;&amp; (oPlyer.hover)
         {
             ///////////DUCK//////////////
            var dist = point_distance(xx+1920,yy+1080,mouse_xx,mouse_yy);
            if dist &lt; 480 &amp;&amp; dist &gt; 0
            {
             if point_direction(xx+1920,yy+1080,mouse_xx,mouse_yy)&gt;=135
             {global.DUCK=1; if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user2)}else{if (oPlyer.pressed==0){with(oPlyer)event_perform(ev_other,ev_user2)}}}//duck
             //if point_direction(xx+1920,yy+1080,mouse_xx,mouse_yy)&lt;135 
             //{if instance_number(oHercules)&gt;0{with(oHercules)event_perform(ev_other,ev_user3)}else{with(oPlyer)event_perform(ev_other,ev_user3)}}//jump
            }
         }*/
         if device_mouse_check_button(i,mb_left) &amp;&amp; (oPlyer.hover==0) &amp;&amp; (oPlyer.air==0) &amp;&amp; (oPlyer.vsp==0)
         {
             ///////////DUCK//////////////
            var dist = point_distance(xx+screen_width,yy+screen_height,mouse_xx,mouse_yy);
            if dist &lt; 480 &amp;&amp; dist &gt; 0
            {
             if point_direction(xx+screen_width,yy+screen_height,mouse_xx,mouse_yy)&gt;=135 
             {global.DUCK=1; if instance_number(oHercules)==0{if (oPlyer.pressed==0){with(oPlyer)event_perform(ev_other,ev_user5)}}}//just duck only
            }
         }
         }
         }}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVE ALL DATA IN HERE [INI]
with(oResetSurf){instance_destroy()}
application_surface_draw_enable(1)
draw_enable_drawevent(1)
if lives==0
{
////Game Over
game_restart()
}
else
{
room_goto(Map1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_texture_flush()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(oPlyer)&gt;0 &amp;&amp; (mot1 &gt; 0)
{
mot1++
if mot1 &gt; 20 {mot1=0}
shader_set(shd_radialblur)
shader_set_uniform_f(RADIALBLUR,
(oPlyer.x-view_xview[0])/view_wview[0],(oPlyer.y-view_yview[0])/view_hview[0])
draw_surface(application_surface,0,0)
shader_reset()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw screen displays
///////////////Button Layout//////////////////
draw_set_alpha(0.2)
draw_circle_colour(xx,yy+screen_height,480,c_white,c_white,0)
draw_line_width_colour(xx,yy+screen_height,xx+lengthdir_x(480,45),yy+screen_height+lengthdir_y(480,45),16,c_ltgray,c_ltgray)
draw_circle_colour(xx+screen_width,yy+screen_height,480,c_white,c_white,0)
draw_line_width_colour(xx+screen_width,yy+screen_height,xx+1920+lengthdir_x(480,135),yy+screen_height+lengthdir_y(480,135),16,c_ltgray,c_ltgray)
draw_set_alpha(1)

////////////////SPECS (HUD)///////////////////
texture_set_interpolation(0)
draw_set_alpha(0.6)
draw_set_colour(c_teal)
draw_background(temp1,xx,yy-250)
draw_set_colour(c_white)
draw_set_alpha(1)
texture_set_interpolation(1)
//HP
shader_set(shd_wither)
shader_set_uniform_f(shader_get_uniform(shd_wither,"life"),global.HP_MAX-clamp(global.HP,0,global.HP_MAX));
shader_set_uniform_f(shader_get_uniform(shd_wither,"maxi"),global.HP_MAX);
shader_set_uniform_f(shader_get_uniform(shd_wither,"vida"),lives);
shader_set_uniform_f(shader_get_uniform(shd_wither,"tick"),1);
if (lives&gt;0) draw_sprite_ext(spr_hp_meter1,0,xx+100,yy+120+leaf_f1,0.75,0.75,(-rot/2)+leaf_r1,-1,1)
shader_set_uniform_f(shader_get_uniform(shd_wither,"tick"),2);
if (lives&gt;1) draw_sprite_ext(spr_hp_meter2,0,xx+100,yy+120+leaf_f2,0.75,0.75,(-rot/2)+leaf_r2,-1,1)
shader_set_uniform_f(shader_get_uniform(shd_wither,"tick"),3);
if (lives&gt;2) draw_sprite_ext(spr_hp_meter3,0,xx+100,yy+120+leaf_f3,0.75,0.75,(-rot/2)+leaf_r3,-1,1)
shader_set_uniform_f(shader_get_uniform(shd_wither,"tick"),4);
if (lives&gt;3) draw_sprite_ext(spr_hp_meter4,0,xx+100,yy+120+leaf_f4,0.75,0.75,(-rot/2)+leaf_r4,-1,1)
shader_set_uniform_f(shader_get_uniform(shd_wither,"tick"),5);
if (lives&gt;4) draw_sprite_ext(spr_hp_meter4,0,xx+100,yy+120+leaf_f4,0.75,0.75,(-rot/2)+leaf_r4,-1,1)
shader_reset()

var c = c_white;
shader_set(shader_meter)
shader_set_uniform_f(shader_get_uniform(shader_meter,"value"),1-(global.METER/100))
draw_sprite_ext(spr_seed,0,xx+960,yy+120,2,2,rot/4,-1,1)///////////METER
shader_reset()

//draw_sprite_ext(spr_head,0,xx+100,yy+120,0.75,0.75,-rot/2,-1,1)
if (INVENTORY)
{
 ////////////INVENTORY DISPLAY////////////
 var cc = make_colour_rgb(100,120,200);
 draw_roundrect_colour_ext(xx+100+INV_X,yy+100,xx+1820,yy+111+INV_Y,160,160,cc,cc,0)
 draw_sprite_ext(spr_arrow,0,xx+600,yy+130,0.75,0.75,0,-1,fade)
  draw_sprite_ext(spr_arrow,0,xx+1300,yy+130,-0.75,0.75,0,-1,fade)
 if (Menu_Page==0)
 {
 draw_set_alpha(fade/4)
  draw_roundrect_colour_ext(xx+1400,yy+160,xx+1780,yy+970,160,160,c_white,c_white,0)/////
  draw_roundrect_colour_ext(xx+140,yy+160,xx+520,yy+970,160,160,c_white,c_white,0)/////
  draw_roundrect_colour_ext(xx+160,yy+180,xx+500,yy+520,160,160,c_white,c_white,1)
  draw_set_alpha(fade)
 draw_sprite(spr_player,0,xx+1600,yy+150+256)
 //////////////SLOTS//////////////
 draw_sprite(spr_slot,0,xx+550,yy+240)
 draw_sprite(spr_slot,0,xx+550,yy+450)
 draw_sprite(spr_slot,0,xx+550,yy+660)
 
 draw_sprite(spr_slot,0,xx+760,yy+240)
 draw_sprite(spr_slot,0,xx+760,yy+450)
 draw_sprite(spr_slot,0,xx+760,yy+660)
 
 draw_sprite(spr_slot,0,xx+970,yy+240)
 draw_sprite(spr_slot,0,xx+970,yy+450)
 draw_sprite(spr_slot,0,xx+970,yy+660)
 
 draw_sprite(spr_slot,0,xx+1180,yy+240)
 draw_sprite(spr_slot,0,xx+1180,yy+450)
 draw_sprite(spr_slot,0,xx+1180,yy+660)
///////
 draw_sprite(spr_selector,Slot_img[0],xx+550,yy+240)
 draw_sprite(spr_selector,Slot_img[4],xx+550,yy+450)
 draw_sprite(spr_selector,Slot_img[8],xx+550,yy+660)
 
 draw_sprite(spr_selector,Slot_img[1],xx+760,yy+240)
 draw_sprite(spr_selector,Slot_img[5],xx+760,yy+450)
 draw_sprite(spr_selector,Slot_img[9],xx+760,yy+660)
 
 draw_sprite(spr_selector,Slot_img[2],xx+970,yy+240)
 draw_sprite(spr_selector,Slot_img[6],xx+970,yy+450)
 draw_sprite(spr_selector,Slot_img[10],xx+970,yy+660)
 
 draw_sprite(spr_selector,Slot_img[3],xx+1180,yy+240)
 draw_sprite(spr_selector,Slot_img[7],xx+1180,yy+450)
 draw_sprite(spr_selector,Slot_img[11],xx+1180,yy+660)
//////
 draw_set_halign(fa_middle)
 draw_text_colour(xx+960,yy+130,"INVENTORY",c,c,c,c,fade)
 draw_text_colour(xx+330,yy+300,"No Item",c,c,c,c,fade)
 draw_text_transformed_colour(xx+1600,yy+700,string(global.LEVEL),0.6,0.6,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+1600,yy+750,string(global.XP)+" / "+string(global.NXT),0.6,0.6,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+1600,yy+830,string(global.METER/2)+"%",0.6,0.6,0,c,c,c,c,fade)
 draw_set_halign(fa_left)
 draw_text_transformed_colour(xx+1440,yy+700,"Level: ",0.6,0.6,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+1440,yy+750,"Exp: ",0.6,0.6,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+1440,yy+830,"Energy: ",0.6,0.6,0,c,c,c,c,fade)
 draw_healthbar(xx+1440,yy+805,xx+1740,yy+825,(global.XP/global.NXT)*100,make_colour_rgb(140,160,240),c_white,c_white,0,1,0)
 draw_healthbar(xx+1440,yy+885,xx+1740,yy+905,global.METER/2,make_colour_rgb(140,160,240),c_white,c_white,0,1,0)
 draw_set_alpha(1)
 }
 if (Menu_Page==1)///Option Display
 {
  draw_set_alpha(fade/4)
  draw_roundrect_colour_ext(xx+140,yy+220,xx+1780,yy+900,160,160,c_white,c_white,0)/////
  draw_set_alpha(fade)
 draw_set_halign(fa_middle)
 draw_text_colour(xx+960,yy+130,"OPTIONS",c,c,c,c,fade)
 draw_text_transformed_colour(xx+960,yy+240,"Settings",1,1,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+960,yy+340,"Online Board",1,1,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+960,yy+440,"Cricket Shop",1,1,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+960,yy+540,"More fun...",1,1,0,c,c,c,c,fade)
 draw_text_transformed_colour(xx+960,yy+640,"Exit Level",1,1,0,c,c,c,c,fade)
 //draw_text_transformed_colour(xx+960,yy+900,"TAP BELOW TO RESUME",0.6,0.6,0,c,c,c,c,fade)
 draw_set_halign(fa_left)
 draw_set_alpha(1)
 //scr_ShowMessage("Do you want to proceed to#the online Leaderboards?#(You will leave the game#if so and redirected)",1)
 scr_ShowMessage("Do you want to proceed to#the online Leaderboards?#(You will leave the game#if so and redirected)",2)
 scr_ShowMessage("You are about to be redirected#to the Nameless Games Website#Do you still want to proceed?",3)
 }
}
draw_sprite_ext(backpack_ico,0,xx+1810,yy+120,0.3,0.3,rot,-1,1)
draw_text_colour(xx+200,yy+8,"x"+string(lives),c,c,c,c,1)
draw_set_halign(fa_middle)
//////STATISTICS AT GOAL////////////
if (instance_number(oPlyer)&gt;0)
{
if oPlyer.stall==1
{
 scr_ShowStatus()
}
//////////////REVISITING LEVEL WITHOUT SEEDS//////////////////
if oPlyer.stall==0
{
scr_ShowMessage_date("Some seeds haven't respawn#here yet. You'll have to wait...",
                    "Don't want to wait so long?#Respawn them at the shop!",6)
draw_set_halign(fa_left)
//draw_healthbar(xx+480,yy+1020,xx+1440,yy+1070,global.METER/2,0,col,col,0,0,0)
}}
draw_set_alpha(trans)
draw_rectangle_colour(xx-32,yy-32,xx+1992,yy+1100,c,c,c,c,0)
draw_set_alpha(1)
/////////////////////////////////////////////////////////////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
